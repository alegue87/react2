{"ast":null,"code":"var _jsxFileName = \"/home/alessio/dev/react2/react2/src/components/dashboard/pair/chart.js\";\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts';\nimport Title from '../title'; // Generate Sales Data\n\nfunction createData(time, balance, equity) {\n  return {\n    time,\n    balance,\n    equity\n  };\n}\n/*\nconst data = [\n    createData('00:00', 0),\n    createData('03:00', 300),\n    createData('06:00', 600),\n    createData('09:00', 800),\n    createData('12:00', 1500),\n    createData('15:00', 2000),\n    createData('18:00', 2400),\n    createData('21:00', 2400),\n    createData('24:00', undefined),\n];*/\n\n\nexport default function Chart({\n  args\n}) {\n  // destruttura da props\n  var history = args.history;\n  var pairName = args.pairName;\n  const theme = useTheme();\n  var data = [];\n  history.forEach(info => {\n    data.push(createData(info.datetime, info.balance, info.equity));\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, pairName), React.createElement(ResponsiveContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    data: data,\n    margin: {\n      top: 16,\n      right: 16,\n      bottom: 10,\n      left: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"time\",\n    stroke: theme.palette.text.secondary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    stroke: theme.palette.text.secondary,\n    type: \"number\",\n    domain: ('dataMin-100', 'dataMax+100'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Label, {\n    angle: -90,\n    position: \"left\",\n    style: {\n      textAnchor: 'middle',\n      fill: theme.palette.text.primary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"\\u20AC\")), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"balance\",\n    stroke: theme.palette.primary.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"equity\",\n    stroke: theme.palette.secondary.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/home/alessio/dev/react2/react2/src/components/dashboard/pair/chart.js"],"names":["React","useTheme","LineChart","Line","XAxis","YAxis","Label","ResponsiveContainer","CartesianGrid","Tooltip","Title","createData","time","balance","equity","Chart","args","history","pairName","theme","data","forEach","info","push","datetime","top","right","bottom","left","palette","text","secondary","textAnchor","fill","primary","main"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts';\nimport Title from '../title';\n\n// Generate Sales Data\nfunction createData(time, balance, equity) {\n    return { time, balance, equity };\n}\n/*\nconst data = [\n    createData('00:00', 0),\n    createData('03:00', 300),\n    createData('06:00', 600),\n    createData('09:00', 800),\n    createData('12:00', 1500),\n    createData('15:00', 2000),\n    createData('18:00', 2400),\n    createData('21:00', 2400),\n    createData('24:00', undefined),\n];*/\n\nexport default function Chart({args}) { // destruttura da props\n    var history = args.history;\n    var pairName = args.pairName;\n    const theme = useTheme();\n    var data = [];\n    history.forEach( (info) => {\n        data.push(createData(info.datetime, info.balance, info.equity))\n    })\n    \n    return (\n        <React.Fragment>\n            <Title>{pairName}</Title>\n            <ResponsiveContainer>\n                <LineChart\n                    data={data}\n                    margin={{\n                        top: 16,\n                        right: 16,\n                        bottom: 10,\n                        left: 16,\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n                    <YAxis \n                        stroke={theme.palette.text.secondary}\n                        type='number'\n                        domain={'dataMin-100', 'dataMax+100'}\n                    >\n                        <Label\n                            angle={-90}\n                            position=\"left\"\n                            style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n                        >\n                            â‚¬\n                        </Label>\n                    </YAxis>\n                    <Tooltip/>\n                    <Line type=\"monotone\" dataKey=\"balance\" stroke={theme.palette.primary.main}  />\n                    <Line type=\"monotone\" dataKey=\"equity\" stroke={theme.palette.secondary.main}  />\n                </LineChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}