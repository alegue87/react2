{"ast":null,"code":"var _jsxFileName = \"/home/alessio/dev/react2/react2/src/components/dashboard/dashboard.js\";\nimport React from 'react';\nimport DashRender from './dashboardRender';\nimport DashboardService from './dashboardService';\nimport Cookie from 'universal-cookie';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initDashboard.bind(this);\n    this.state = {\n      year: new Date().getFullYear(),\n      month: new Date().getMonth() + 1\n    };\n  }\n\n  initDashboard() {\n    const cookie = new Cookie();\n    const token = cookie.get('token');\n    const username = cookie.get('username');\n    const dashboardService = new DashboardService();\n    this.data = [];\n    dashboardService.getDashboard(token, username, this.state.year, this.state.month, this.onSuccess.bind(this), this.onError.bind(this));\n  }\n\n  onSuccess(data) {\n    this.data = data;\n    this.setState({\n      dataRetrived: true\n    });\n  }\n\n  onError(error) {\n    console.log(error);\n  }\n\n  selectChange(name, event) {\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  render() {\n    var years = [{\n      value: 2020,\n      label: '2020'\n    }, {\n      value: 2021,\n      label: '2021'\n    }, {\n      value: 2022,\n      label: '2022'\n    }, {\n      value: 2023,\n      label: '2023'\n    }];\n    var months = [{\n      value: 1,\n      label: 'Gennaio'\n    }, {\n      value: 2,\n      label: 'Febbraio'\n    }, {\n      value: 3,\n      label: 'Marzo'\n    }, {\n      value: 4,\n      label: 'Aprile'\n    }, {\n      value: 5,\n      label: 'Maggio'\n    }, {\n      value: 6,\n      label: 'Giugno'\n    }, {\n      value: 7,\n      label: 'Luglio'\n    }, {\n      value: 8,\n      label: 'Agosto'\n    }, {\n      value: 9,\n      label: 'Settembre'\n    }, {\n      value: 10,\n      label: 'Ottobre'\n    }, {\n      value: 11,\n      label: 'Novembre'\n    }, {\n      value: 12,\n      label: 'Dicembre'\n    }];\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      lg: 2,\n      style: {\n        marginTop: \"96px\",\n        paddingLeft: \"65px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"select_year\",\n      select: true,\n      value: this.state.year,\n      helperText: \"Anno\",\n      onChange: this.selectChange.bind(this, \"year\"),\n      style: {\n        width: \"100%\",\n        padding: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, years.map(year => React.createElement(MenuItem, {\n      key: year.value,\n      value: year.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, year.label))), React.createElement(TextField, {\n      id: \"select_month\",\n      select: true,\n      value: this.state.month,\n      helperText: \"Mese\",\n      style: {\n        width: \"100%\",\n        padding: \"5px\"\n      },\n      onChange: this.selectChange.bind(this, \"month\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, months.map(month => React.createElement(MenuItem, {\n      key: month.value,\n      value: month.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, month.label))), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.initDashboard.bind(this),\n      style: {\n        margin: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Applica\"))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      lg: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(DashRender, {\n      data: this.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/alessio/dev/react2/react2/src/components/dashboard/dashboard.js"],"names":["React","DashRender","DashboardService","Cookie","Grid","Paper","TextField","MenuItem","Button","Dashboard","Component","constructor","props","initDashboard","bind","state","year","Date","getFullYear","month","getMonth","cookie","token","get","username","dashboardService","data","getDashboard","onSuccess","onError","setState","dataRetrived","error","console","log","selectChange","name","event","target","value","render","years","label","months","marginTop","paddingLeft","width","padding","map","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DashRender from './dashboardRender';\nimport DashboardService from './dashboardService';\nimport Cookie from 'universal-cookie';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nexport default class Dashboard extends React.Component{\n    constructor(props){\n        super(props);\n        this.initDashboard.bind(this)\n        this.state = {\n            year:new Date().getFullYear(),\n            month:new Date().getMonth()+1\n        } \n    }\n    initDashboard(){\n        const cookie = new Cookie();\n        const token = cookie.get('token');\n        const username = cookie.get('username');\n        const dashboardService = new DashboardService();\n        this.data = []\n        dashboardService.getDashboard(\n            token, \n            username, \n            this.state.year, \n            this.state.month,\n            this.onSuccess.bind(this), \n            this.onError.bind(this)\n        );        \n    }\n    onSuccess(data){\n        this.data = data\n        this.setState({dataRetrived:true})\n    }\n    onError(error){\n        console.log(error)\n    }\n    selectChange(name, event){\n        this.setState({\n            [name]:event.target.value\n        })\n    }\n    render(){\n        var years = [ \n            {value:2020, label:'2020'},\n            {value:2021, label:'2021'},\n            {value:2022, label:'2022'},\n            {value:2023, label:'2023'}\n        ]\n        var months = [\n            {value:1, label:'Gennaio'},\n            {value:2, label:'Febbraio'},\n            {value:3, label:'Marzo'},\n            {value:4, label:'Aprile'},\n            {value:5, label:'Maggio'},\n            {value:6, label:'Giugno'},\n            {value:7, label:'Luglio'},\n            {value:8, label:'Agosto'},\n            {value:9, label:'Settembre'},\n            {value:10, label:'Ottobre'},\n            {value:11, label:'Novembre'},\n            {value:12, label:'Dicembre'}\n        ]\n        return(\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={12} lg={2} style={{marginTop:\"96px\", paddingLeft:\"65px\"}}>\n                    <Paper>\n                        <TextField\n                        id=\"select_year\"\n                        select\n                        value={this.state.year}\n                        helperText=\"Anno\"\n                        onChange={this.selectChange.bind(this, \"year\")}\n                        style={{width:\"100%\", padding:\"5px\"}}\n                        >\n                            {years.map( year => (\n                                <MenuItem key={year.value} value={year.value}>\n                                    {year.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                        <TextField\n                        id=\"select_month\"\n                        select\n                        value={this.state.month}\n                        helperText=\"Mese\"\n                        style={{width:\"100%\", padding:\"5px\"}}\n                        onChange={this.selectChange.bind(this, \"month\")}\n                        >\n                            {months.map( month => (\n                                <MenuItem key={month.value} value={month.value}>\n                                    {month.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                        <Button variant=\"contained\" color=\"primary\"\n                            onClick={this.initDashboard.bind(this)}\n                            style={{margin:'5px'}}\n                        >\n                            Applica\n                        </Button>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={12} lg={10}>\n                    <DashRender data={this.data}/>  \n                </Grid>  \n            </Grid>\n           \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}