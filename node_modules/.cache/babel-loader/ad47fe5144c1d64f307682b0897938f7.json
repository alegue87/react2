{"ast":null,"code":"import _objectSpread from \"/home/alessio/dev/react2/react2/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/alessio/dev/react2/react2/src/components/mainLayout/leftDrawer/leftDrawer.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { mainListItems } from './listItems';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nconst drawerWidth = 240;\nconst useStyle = makeStyles(theme => ({\n  toolbarIcon: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px'\n  }, theme.mixins.toolbar),\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  }\n}));\nexport default function LeftDrawer({\n  open,\n  handleDrawerClose\n}) {\n  var open = args.open;\n  var handleDrawerClose = args.handleDrawerClose;\n  const classes = useStyle();\n  return React.createElement(Drawer, {\n    variant: \"permanent\",\n    classes: {\n      paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n    },\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbarIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, onClick = handleDrawerClose, React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, mainListItems), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/alessio/dev/react2/react2/src/components/mainLayout/leftDrawer/leftDrawer.js"],"names":["React","clsx","makeStyles","mainListItems","Drawer","IconButton","ChevronLeftIcon","Divider","List","drawerWidth","useStyle","theme","toolbarIcon","display","alignItems","justifyContent","padding","mixins","toolbar","drawerPaper","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","spacing","breakpoints","up","LeftDrawer","open","handleDrawerClose","args","classes","paper","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { mainListItems } from './listItems';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\n\nconst drawerWidth = 240;\nconst useStyle = makeStyles( theme => ({\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n}))\n\n\nexport default function LeftDrawer({open, handleDrawerClose}){\n    var open = args.open;\n    var handleDrawerClose = args.handleDrawerClose;\n    const classes = useStyle();\n    return(\n        <Drawer\n            variant=\"permanent\"\n            classes={{\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n            }}\n            open={open}\n        >\n            <div className={classes.toolbarIcon}>\n                <IconButton >{onClick=handleDrawerClose}\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Divider />\n            <List>{mainListItems}</List>\n            <Divider />\n            {/*<List>{secondaryListItems}</List>*/}\n        </Drawer>\n    )\n}"]},"metadata":{},"sourceType":"module"}